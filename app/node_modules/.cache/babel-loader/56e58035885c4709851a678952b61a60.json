{"ast":null,"code":"var _jsxFileName = \"/Users/pranavputta/GitHub/mathscript/app/src/App.tsx\";\nimport React from \"react\";\nimport \"./App.css\";\nimport \"process\";\n\nconst {\n  interpret\n} = require(\"./mathscript.node\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onInputChange = event => {\n      let input = event.target.value;\n      let out = interpret(input);\n      this.setState({\n        input: input,\n        results: out\n      });\n      /*\n      let out = interpretSource(input.trim());\n      if (typeof out === \"string\") {\n        this.setState({ input: input, results: out });\n      } else {\n        let result = \"\";\n        for (let o of out) {\n          if (o !== undefined) {\n            result += o.toString();\n          }\n          result += \"\\n\";\n        }\n        result += \"\\n \" + JSON.stringify(process.memoryUsage());\n        this.setState({ input: input, results: result });\n      }*/\n    };\n\n    this.state = {\n      input: \"\",\n      results: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"Input-Text-Area\",\n      value: this.state.input,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      disabled: true,\n      value: this.state.results,\n      className: \"Result-Text-Area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pranavputta/GitHub/mathscript/app/src/App.tsx"],"names":["React","interpret","require","App","Component","constructor","props","onInputChange","event","input","target","value","out","setState","results","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAO,SAAP;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAgBC,OAAO,CAAC,mBAAD,CAA7B;;AASA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAgD;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;;AADwB,SAQ1BC,aAR0B,GAQTC,KAAD,IAAmD;AACjE,UAAIC,KAAa,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAjC;AACA,UAAIC,GAAW,GAAGX,SAAS,CAACQ,KAAD,CAA3B;AACA,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAEA,KAAT;AAAgBK,QAAAA,OAAO,EAAEF;AAAzB,OAAd;AAEA;;;;;;;;;;;;;;;AAeD,KA5ByB;;AAExB,SAAKG,KAAL,GAAa;AACXN,MAAAA,KAAK,EAAE,EADI;AAEXK,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAwBDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWN,KAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKF,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME;AACE,MAAA,QAAQ,EAAE,IADZ;AAEE,MAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWD,OAFpB;AAGE,MAAA,SAAS,EAAC,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CADF;AAgBD;;AAhD6C;;AAmDhD,eAAeX,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport \"process\";\nconst { interpret } = require(\"./mathscript.node\");\n\ninterface Props {}\n\ninterface State {\n  input: string;\n  results: string;\n}\n\nclass App extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      input: \"\",\n      results: \"\",\n    };\n  }\n\n  onInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    let input: string = event.target.value;\n    let out: string = interpret(input);\n    this.setState({ input: input, results: out });\n\n    /*\n    let out = interpretSource(input.trim());\n    if (typeof out === \"string\") {\n      this.setState({ input: input, results: out });\n    } else {\n      let result = \"\";\n      for (let o of out) {\n        if (o !== undefined) {\n          result += o.toString();\n        }\n        result += \"\\n\";\n      }\n      result += \"\\n \" + JSON.stringify(process.memoryUsage());\n      this.setState({ input: input, results: result });\n    }*/\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <textarea\n            className=\"Input-Text-Area\"\n            value={this.state.input}\n            onChange={this.onInputChange}\n          />\n          <textarea\n            disabled={true}\n            value={this.state.results}\n            className=\"Result-Text-Area\"\n          />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}