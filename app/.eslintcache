[{"/Users/pranavputta/GitHub/mathscript/app/src/index.tsx":"1","/Users/pranavputta/GitHub/mathscript/app/src/reportWebVitals.ts":"2","/Users/pranavputta/GitHub/mathscript/app/src/App.tsx":"3"},{"size":500,"mtime":1607930796891,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1607930796892,"results":"6","hashOfConfig":"5"},{"size":2049,"mtime":1621529954259,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"cxzfwu",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"/Users/pranavputta/GitHub/mathscript/app/src/index.tsx",[],["16","17"],"/Users/pranavputta/GitHub/mathscript/app/src/reportWebVitals.ts",[],"/Users/pranavputta/GitHub/mathscript/app/src/App.tsx",["18"],"import React, { useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\ninterface InterpretOutput {\n  disassembly: string[];\n  asm: number[];\n  output: [number, string][];\n  result: any;\n}\n\nfunction format_disassembly(data: InterpretOutput) {\n  let output = \"\";\n  data.disassembly.forEach((str) => {\n    output += str;\n  });\n\n  return output;\n}\n\nfunction format_result(data: InterpretOutput) {\n  let output = \"\";\n  data.output.forEach(el => {\n    output += el[1] + \"\\n\";\n  });\n\n  return output;\n}\n\nfunction App() {\n  let [out, setOutput] = useState(\"\");\n  let [disassembly_out, setDisassemblyOut] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <div style={{ display: \"flex\", flexDirection: \"row\", flex: 1 }}>\n        <textarea\n          className=\"Input\"\n          onChange={(evt) => {\n            let input = evt.target.value;\n            import(\"wasm\")\n              .then((module) => {\n                let data: InterpretOutput = module.lib_interpret(input);\n                setDisassemblyOut(format_disassembly(data));\n                setOutput(format_result(data));\n              })\n              .catch((err) => {\n                setOutput(JSON.stringify(err));\n              });\n          }}\n          style={{\n            flex: 2,\n            width: \"100%\",\n            height: \"100%\",\n            color: \"white\",\n          }}\n        />\n\n        <div style={{ display: \"flex\", flexDirection: \"column\", flex: 1 }}>\n          <textarea\n            className=\"Output\"\n            disabled={true}\n            value={out}\n            style={{\n              flex: 1,\n              width: \"100%\",\n              height: \"100%\",\n              backgroundColor: \"white\",\n            }}\n          />\n          <textarea\n            className=\"Disassembly\"\n            disabled={true}\n            value={disassembly_out}\n            style={{\n              flex: 1,\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":2,"column":8,"nodeType":"25","messageId":"26","endLine":2,"endColumn":12},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]