{"version":3,"sources":["interpreter/interpreter.js","screens/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Module","_scriptDir","readyPromiseResolve","readyPromiseReject","Promise","resolve","reject","key","moduleOverrides","hasOwnProperty","arguments_","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","window","importScripts","process","versions","node","read_","readBinary","nodeFS","nodePath","scriptDirectory","locateFile","path","require","dirname","__dirname","filename","binary","ret","buffer","Uint8Array","assert","length","replace","slice","ex","ExitStatus","abort","status","read","f","data","readbuffer","scriptArgs","arguments","quit","print","console","log","warn","error","printErr","self","location","href","document","currentScript","src","indexOf","substr","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","onload","onerror","wasmBinary","wasmMemory","wasmTable","out","bind","err","WebAssembly","ABORT","condition","text","getCFunc","ident","func","ccall","returnType","argTypes","args","opts","toC","str","undefined","len","stringToUTF8","stackAlloc","arr","writeArrayToMemory","cArgs","stack","i","converter","stackSave","apply","UTF8ToString","Boolean","convertReturnValue","stackRestore","cwrap","numericArgs","every","type","UTF8Decoder","TextDecoder","UTF8ArrayToString","heap","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","u0","u1","u2","String","fromCharCode","ch","ptr","HEAPU8","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","outPtr","lengthBytesUTF8","UTF16Decoder","UTF16ToString","maxIdx","HEAPU16","codeUnit","HEAP16","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","HEAP32","stringToUTF32","lengthBytesUTF32","array","HEAP8","set","HEAPU32","HEAPF32","HEAPF64","WASM_PAGE_SIZE","alignUp","x","multiple","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","INITIAL_INITIAL_MEMORY","Memory","byteLength","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","preRun","addOnPreRun","shift","callRuntimeCallbacks","initRuntime","preMain","postRun","addOnPostRun","cb","unshift","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","clearInterval","callback","what","e","RuntimeError","hasPrefix","prefix","prototype","startsWith","dataURIPrefix","isDataURI","fileURIPrefix","isFileURI","wasmBinaryFile","getBinary","getBinaryPromise","fetch","then","credentials","catch","createWasm","info","asmLibraryArg","receiveInstance","instance","module","exports","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","instantiate","reason","instantiateStreaming","instantiateAsync","callbacks","arg","get","ExceptionInfoAttrs","DESTRUCTOR_OFFSET","REFCOUNT_OFFSET","TYPE_OFFSET","CAUGHT_OFFSET","RETHROWN_OFFSET","SIZE","___cxa_allocate_exception","size","_malloc","ExceptionInfo","excPtr","this","set_type","get_type","set_destructor","destructor","get_destructor","set_refcount","refcount","set_caught","caught","get_caught","set_rethrown","rethrown","get_rethrown","init","add_ref","value","release_ref","prev","__ZSt18uncaught_exceptionv","uncaught_exceptions","___cxa_throw","getShiftFromSize","TypeError","embind_init_charCodes","codes","Array","embind_charCodes","readLatin1String","c","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","name","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","message","Error","toString","Object","create","constructor","BindingError","throwBindingError","registerType","rawType","registeredInstance","options","ignoreDuplicateRegistrations","forEach","__embind_register_bool","trueValue","falseValue","wt","destructors","o","pointer","destructorFunction","emval_free_list","emval_handle_array","__emval_decref","handle","push","count_emval_handles","count","get_first_emval","init_emval","__emval_register","pop","simpleReadValueFromPointer","__embind_register_emval","rv","_embind_repr","v","t","floatReadValueFromPointer","__embind_register_float","integerReadValueFromPointer","signed","__embind_register_integer","primitiveType","minRange","maxRange","fromWireType","bitshift","isUnsignedType","__embind_register_memory_view","dataTypeIndex","TA","decodeMemoryView","__embind_register_std_string","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","a","join","_free","ArrayBuffer","valueIsOfTypeString","Uint8ClampedArray","charCode","__embind_register_std_wstring","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","__embind_register_void","isVoid","_abort","_emscripten_memcpy_big","dest","num","copyWithin","_emscripten_get_heap_size","emscripten_realloc_buffer","grow","_emscripten_resize_heap","requestedSize","oldSize","cutDown","overGrownHeapSize","Math","min","max","SYSCALLS","mappings","buffers","printChar","stream","curr","varargs","getStr","get64","low","high","_fd_close","fd","_fd_seek","offset_low","offset_high","whence","newOffset","_fd_write","iov","iovcnt","pnum","j","___wasm_call_ctors","calledRun","run","doRun","setTimeout","runCaller","ready","Home","props","load","interpreter","noInitialRun","noExitRuntime","mod","interpret","setState","inputChange","Date","now","input","result","state","View","style","styles","container","TextInput","onChangeText","multiline","textInput","React","Component","StyleSheet","flex","flexDirection","backgroundColor","color","fontFamily","fontSize","fontWeight","padding","App","height","Platform","OS","createElement","textContent","head","append","injectWebCss","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.ff890d45.chunk.js","sourcesContent":["/* eslint-disable */\n\nvar Module = (function() {\n  var _scriptDir = \"interpreter.wasm\";\n  \n  return (\nfunction(Module) {\n  Module = Module || {};\n\nvar Module = typeof Module !== \"undefined\" ? Module : {};\n\nvar readyPromiseResolve, readyPromiseReject;\n\nModule[\"ready\"] = new Promise(function(resolve, reject) {\n readyPromiseResolve = resolve;\n readyPromiseReject = reject;\n});\n\nvar moduleOverrides = {};\n\nvar key;\n\nfor (key in Module) {\n if (Module.hasOwnProperty(key)) {\n  moduleOverrides[key] = Module[key];\n }\n}\n\nvar arguments_ = [];\n\nvar thisProgram = \"./this.program\";\n\nvar quit_ = function(status, toThrow) {\n throw toThrow;\n};\n\nvar ENVIRONMENT_IS_WEB = false;\n\nvar ENVIRONMENT_IS_WORKER = false;\n\nvar ENVIRONMENT_IS_NODE = false;\n\nvar ENVIRONMENT_IS_SHELL = false;\n\nENVIRONMENT_IS_WEB = typeof window === \"object\";\n\nENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n\nENVIRONMENT_IS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\n\nENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\nvar scriptDirectory = \"\";\n\nfunction locateFile(path) {\n if (Module[\"locateFile\"]) {\n  return Module[\"locateFile\"](path, scriptDirectory);\n }\n return scriptDirectory + path;\n}\n\nvar read_, readAsync, readBinary, setWindowTitle;\n\nvar nodeFS;\n\nvar nodePath;\n\nif (ENVIRONMENT_IS_NODE) {\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = require(\"path\").dirname(scriptDirectory) + \"/\";\n } else {\n  scriptDirectory = __dirname + \"/\";\n }\n read_ = function shell_read(filename, binary) {\n  if (!nodeFS) nodeFS = require(\"fs\");\n  if (!nodePath) nodePath = require(\"path\");\n  filename = nodePath[\"normalize\"](filename);\n  return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\n };\n readBinary = function readBinary(filename) {\n  var ret = read_(filename, true);\n  if (!ret.buffer) {\n   ret = new Uint8Array(ret);\n  }\n  assert(ret.buffer);\n  return ret;\n };\n if (process[\"argv\"].length > 1) {\n  thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n }\n arguments_ = process[\"argv\"].slice(2);\n process[\"on\"](\"uncaughtException\", function(ex) {\n  if (!(ex instanceof ExitStatus)) {\n   throw ex;\n  }\n });\n process[\"on\"](\"unhandledRejection\", abort);\n quit_ = function(status) {\n  process[\"exit\"](status);\n };\n Module[\"inspect\"] = function() {\n  return \"[Emscripten Module object]\";\n };\n} else if (ENVIRONMENT_IS_SHELL) {\n if (typeof read != \"undefined\") {\n  read_ = function shell_read(f) {\n   return read(f);\n  };\n }\n readBinary = function readBinary(f) {\n  var data;\n  if (typeof readbuffer === \"function\") {\n   return new Uint8Array(readbuffer(f));\n  }\n  data = read(f, \"binary\");\n  assert(typeof data === \"object\");\n  return data;\n };\n if (typeof scriptArgs != \"undefined\") {\n  arguments_ = scriptArgs;\n } else if (typeof arguments != \"undefined\") {\n  arguments_ = arguments;\n }\n if (typeof quit === \"function\") {\n  quit_ = function(status) {\n   quit(status);\n  };\n }\n if (typeof print !== \"undefined\") {\n  if (typeof console === \"undefined\") console = {};\n  console.log = print;\n  console.warn = console.error = typeof printErr !== \"undefined\" ? printErr : print;\n }\n} else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n if (ENVIRONMENT_IS_WORKER) {\n  scriptDirectory = self.location.href;\n } else if (document.currentScript) {\n  scriptDirectory = document.currentScript.src;\n }\n if (_scriptDir) {\n  scriptDirectory = _scriptDir;\n }\n if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n  scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n } else {\n  scriptDirectory = \"\";\n }\n {\n  read_ = function shell_read(url) {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, false);\n   xhr.send(null);\n   return xhr.responseText;\n  };\n  if (ENVIRONMENT_IS_WORKER) {\n   readBinary = function readBinary(url) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"GET\", url, false);\n    xhr.responseType = \"arraybuffer\";\n    xhr.send(null);\n    return new Uint8Array(xhr.response);\n   };\n  }\n  readAsync = function readAsync(url, onload, onerror) {\n   var xhr = new XMLHttpRequest();\n   xhr.open(\"GET\", url, true);\n   xhr.responseType = \"arraybuffer\";\n   xhr.onload = function xhr_onload() {\n    if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n     onload(xhr.response);\n     return;\n    }\n    onerror();\n   };\n   xhr.onerror = onerror;\n   xhr.send(null);\n  };\n }\n setWindowTitle = function(title) {\n  document.title = title;\n };\n} else {}\n\nvar out = Module[\"print\"] || console.log.bind(console);\n\nvar err = Module[\"printErr\"] || console.warn.bind(console);\n\nfor (key in moduleOverrides) {\n if (moduleOverrides.hasOwnProperty(key)) {\n  Module[key] = moduleOverrides[key];\n }\n}\n\nmoduleOverrides = null;\n\nif (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n\nif (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n\nif (Module[\"quit\"]) quit_ = Module[\"quit\"];\n\nvar wasmBinary;\n\nif (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n\nvar noExitRuntime;\n\nif (Module[\"noExitRuntime\"]) noExitRuntime = Module[\"noExitRuntime\"];\n\nif (typeof WebAssembly !== \"object\") {\n abort(\"no native wasm support detected\");\n}\n\nvar wasmMemory;\n\nvar wasmTable;\n\nvar ABORT = false;\n\nvar EXITSTATUS = 0;\n\nfunction assert(condition, text) {\n if (!condition) {\n  abort(\"Assertion failed: \" + text);\n }\n}\n\nfunction getCFunc(ident) {\n var func = Module[\"_\" + ident];\n assert(func, \"Cannot call unknown function \" + ident + \", make sure it is exported\");\n return func;\n}\n\nfunction ccall(ident, returnType, argTypes, args, opts) {\n var toC = {\n  \"string\": function(str) {\n   var ret = 0;\n   if (str !== null && str !== undefined && str !== 0) {\n    var len = (str.length << 2) + 1;\n    ret = stackAlloc(len);\n    stringToUTF8(str, ret, len);\n   }\n   return ret;\n  },\n  \"array\": function(arr) {\n   var ret = stackAlloc(arr.length);\n   writeArrayToMemory(arr, ret);\n   return ret;\n  }\n };\n function convertReturnValue(ret) {\n  if (returnType === \"string\") return UTF8ToString(ret);\n  if (returnType === \"boolean\") return Boolean(ret);\n  return ret;\n }\n var func = getCFunc(ident);\n var cArgs = [];\n var stack = 0;\n if (args) {\n  for (var i = 0; i < args.length; i++) {\n   var converter = toC[argTypes[i]];\n   if (converter) {\n    if (stack === 0) stack = stackSave();\n    cArgs[i] = converter(args[i]);\n   } else {\n    cArgs[i] = args[i];\n   }\n  }\n }\n var ret = func.apply(null, cArgs);\n ret = convertReturnValue(ret);\n if (stack !== 0) stackRestore(stack);\n return ret;\n}\n\nfunction cwrap(ident, returnType, argTypes, opts) {\n argTypes = argTypes || [];\n var numericArgs = argTypes.every(function(type) {\n  return type === \"number\";\n });\n var numericRet = returnType !== \"string\";\n if (numericRet && numericArgs && !opts) {\n  return getCFunc(ident);\n }\n return function() {\n  return ccall(ident, returnType, argTypes, arguments, opts);\n };\n}\n\nvar UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n\nfunction UTF8ArrayToString(heap, idx, maxBytesToRead) {\n var endIdx = idx + maxBytesToRead;\n var endPtr = idx;\n while (heap[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n  return UTF8Decoder.decode(heap.subarray(idx, endPtr));\n } else {\n  var str = \"\";\n  while (idx < endPtr) {\n   var u0 = heap[idx++];\n   if (!(u0 & 128)) {\n    str += String.fromCharCode(u0);\n    continue;\n   }\n   var u1 = heap[idx++] & 63;\n   if ((u0 & 224) == 192) {\n    str += String.fromCharCode((u0 & 31) << 6 | u1);\n    continue;\n   }\n   var u2 = heap[idx++] & 63;\n   if ((u0 & 240) == 224) {\n    u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n   } else {\n    u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++] & 63;\n   }\n   if (u0 < 65536) {\n    str += String.fromCharCode(u0);\n   } else {\n    var ch = u0 - 65536;\n    str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n   }\n  }\n }\n return str;\n}\n\nfunction UTF8ToString(ptr, maxBytesToRead) {\n return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n}\n\nfunction stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n if (!(maxBytesToWrite > 0)) return 0;\n var startIdx = outIdx;\n var endIdx = outIdx + maxBytesToWrite - 1;\n for (var i = 0; i < str.length; ++i) {\n  var u = str.charCodeAt(i);\n  if (u >= 55296 && u <= 57343) {\n   var u1 = str.charCodeAt(++i);\n   u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n  }\n  if (u <= 127) {\n   if (outIdx >= endIdx) break;\n   heap[outIdx++] = u;\n  } else if (u <= 2047) {\n   if (outIdx + 1 >= endIdx) break;\n   heap[outIdx++] = 192 | u >> 6;\n   heap[outIdx++] = 128 | u & 63;\n  } else if (u <= 65535) {\n   if (outIdx + 2 >= endIdx) break;\n   heap[outIdx++] = 224 | u >> 12;\n   heap[outIdx++] = 128 | u >> 6 & 63;\n   heap[outIdx++] = 128 | u & 63;\n  } else {\n   if (outIdx + 3 >= endIdx) break;\n   heap[outIdx++] = 240 | u >> 18;\n   heap[outIdx++] = 128 | u >> 12 & 63;\n   heap[outIdx++] = 128 | u >> 6 & 63;\n   heap[outIdx++] = 128 | u & 63;\n  }\n }\n heap[outIdx] = 0;\n return outIdx - startIdx;\n}\n\nfunction stringToUTF8(str, outPtr, maxBytesToWrite) {\n return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n}\n\nfunction lengthBytesUTF8(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var u = str.charCodeAt(i);\n  if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n  if (u <= 127) ++len; else if (u <= 2047) len += 2; else if (u <= 65535) len += 3; else len += 4;\n }\n return len;\n}\n\nvar UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n\nfunction UTF16ToString(ptr, maxBytesToRead) {\n var endPtr = ptr;\n var idx = endPtr >> 1;\n var maxIdx = idx + maxBytesToRead / 2;\n while (!(idx >= maxIdx) && HEAPU16[idx]) ++idx;\n endPtr = idx << 1;\n if (endPtr - ptr > 32 && UTF16Decoder) {\n  return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));\n } else {\n  var i = 0;\n  var str = \"\";\n  while (1) {\n   var codeUnit = HEAP16[ptr + i * 2 >> 1];\n   if (codeUnit == 0 || i == maxBytesToRead / 2) return str;\n   ++i;\n   str += String.fromCharCode(codeUnit);\n  }\n }\n}\n\nfunction stringToUTF16(str, outPtr, maxBytesToWrite) {\n if (maxBytesToWrite === undefined) {\n  maxBytesToWrite = 2147483647;\n }\n if (maxBytesToWrite < 2) return 0;\n maxBytesToWrite -= 2;\n var startPtr = outPtr;\n var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\n for (var i = 0; i < numCharsToWrite; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  HEAP16[outPtr >> 1] = codeUnit;\n  outPtr += 2;\n }\n HEAP16[outPtr >> 1] = 0;\n return outPtr - startPtr;\n}\n\nfunction lengthBytesUTF16(str) {\n return str.length * 2;\n}\n\nfunction UTF32ToString(ptr, maxBytesToRead) {\n var i = 0;\n var str = \"\";\n while (!(i >= maxBytesToRead / 4)) {\n  var utf32 = HEAP32[ptr + i * 4 >> 2];\n  if (utf32 == 0) break;\n  ++i;\n  if (utf32 >= 65536) {\n   var ch = utf32 - 65536;\n   str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n  } else {\n   str += String.fromCharCode(utf32);\n  }\n }\n return str;\n}\n\nfunction stringToUTF32(str, outPtr, maxBytesToWrite) {\n if (maxBytesToWrite === undefined) {\n  maxBytesToWrite = 2147483647;\n }\n if (maxBytesToWrite < 4) return 0;\n var startPtr = outPtr;\n var endPtr = startPtr + maxBytesToWrite - 4;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) {\n   var trailSurrogate = str.charCodeAt(++i);\n   codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\n  }\n  HEAP32[outPtr >> 2] = codeUnit;\n  outPtr += 4;\n  if (outPtr + 4 > endPtr) break;\n }\n HEAP32[outPtr >> 2] = 0;\n return outPtr - startPtr;\n}\n\nfunction lengthBytesUTF32(str) {\n var len = 0;\n for (var i = 0; i < str.length; ++i) {\n  var codeUnit = str.charCodeAt(i);\n  if (codeUnit >= 55296 && codeUnit <= 57343) ++i;\n  len += 4;\n }\n return len;\n}\n\nfunction writeArrayToMemory(array, buffer) {\n HEAP8.set(array, buffer);\n}\n\nvar WASM_PAGE_SIZE = 65536;\n\nfunction alignUp(x, multiple) {\n if (x % multiple > 0) {\n  x += multiple - x % multiple;\n }\n return x;\n}\n\nvar buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n\nfunction updateGlobalBufferAndViews(buf) {\n buffer = buf;\n Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n}\n\nvar INITIAL_INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n\nif (Module[\"wasmMemory\"]) {\n wasmMemory = Module[\"wasmMemory\"];\n} else {\n wasmMemory = new WebAssembly.Memory({\n  \"initial\": INITIAL_INITIAL_MEMORY / WASM_PAGE_SIZE,\n  \"maximum\": 2147483648 / WASM_PAGE_SIZE\n });\n}\n\nif (wasmMemory) {\n buffer = wasmMemory.buffer;\n}\n\nINITIAL_INITIAL_MEMORY = buffer.byteLength;\n\nupdateGlobalBufferAndViews(buffer);\n\nvar __ATPRERUN__ = [];\n\nvar __ATINIT__ = [];\n\nvar __ATMAIN__ = [];\n\nvar __ATPOSTRUN__ = [];\n\nvar runtimeInitialized = false;\n\nfunction preRun() {\n if (Module[\"preRun\"]) {\n  if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [ Module[\"preRun\"] ];\n  while (Module[\"preRun\"].length) {\n   addOnPreRun(Module[\"preRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPRERUN__);\n}\n\nfunction initRuntime() {\n runtimeInitialized = true;\n callRuntimeCallbacks(__ATINIT__);\n}\n\nfunction preMain() {\n callRuntimeCallbacks(__ATMAIN__);\n}\n\nfunction postRun() {\n if (Module[\"postRun\"]) {\n  if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [ Module[\"postRun\"] ];\n  while (Module[\"postRun\"].length) {\n   addOnPostRun(Module[\"postRun\"].shift());\n  }\n }\n callRuntimeCallbacks(__ATPOSTRUN__);\n}\n\nfunction addOnPreRun(cb) {\n __ATPRERUN__.unshift(cb);\n}\n\nfunction addOnPostRun(cb) {\n __ATPOSTRUN__.unshift(cb);\n}\n\nvar runDependencies = 0;\n\nvar runDependencyWatcher = null;\n\nvar dependenciesFulfilled = null;\n\nfunction addRunDependency(id) {\n runDependencies++;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n}\n\nfunction removeRunDependency(id) {\n runDependencies--;\n if (Module[\"monitorRunDependencies\"]) {\n  Module[\"monitorRunDependencies\"](runDependencies);\n }\n if (runDependencies == 0) {\n  if (runDependencyWatcher !== null) {\n   clearInterval(runDependencyWatcher);\n   runDependencyWatcher = null;\n  }\n  if (dependenciesFulfilled) {\n   var callback = dependenciesFulfilled;\n   dependenciesFulfilled = null;\n   callback();\n  }\n }\n}\n\nModule[\"preloadedImages\"] = {};\n\nModule[\"preloadedAudios\"] = {};\n\nfunction abort(what) {\n if (Module[\"onAbort\"]) {\n  Module[\"onAbort\"](what);\n }\n what += \"\";\n err(what);\n ABORT = true;\n EXITSTATUS = 1;\n what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n var e = new WebAssembly.RuntimeError(what);\n readyPromiseReject(e);\n throw e;\n}\n\nfunction hasPrefix(str, prefix) {\n return String.prototype.startsWith ? str.startsWith(prefix) : str.indexOf(prefix) === 0;\n}\n\nvar dataURIPrefix = \"data:application/octet-stream;base64,\";\n\nfunction isDataURI(filename) {\n return hasPrefix(filename, dataURIPrefix);\n}\n\nvar fileURIPrefix = \"file://\";\n\nfunction isFileURI(filename) {\n return hasPrefix(filename, fileURIPrefix);\n}\n\nvar wasmBinaryFile = \"interpreter.wasm\";\n\nif (!isDataURI(wasmBinaryFile)) {\n wasmBinaryFile = locateFile(wasmBinaryFile);\n}\n\nfunction getBinary() {\n try {\n  if (wasmBinary) {\n   return new Uint8Array(wasmBinary);\n  }\n  if (readBinary) {\n   return readBinary(wasmBinaryFile);\n  } else {\n   throw \"both async and sync fetching of the wasm failed\";\n  }\n } catch (err) {\n  abort(err);\n }\n}\n\nfunction getBinaryPromise() {\n if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) {\n  return fetch(wasmBinaryFile, {\n   credentials: \"same-origin\"\n  }).then(function(response) {\n   if (!response[\"ok\"]) {\n    throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n   }\n   return response[\"arrayBuffer\"]();\n  }).catch(function() {\n   return getBinary();\n  });\n }\n return Promise.resolve().then(getBinary);\n}\n\nfunction createWasm() {\n var info = {\n  \"a\": asmLibraryArg\n };\n function receiveInstance(instance, module) {\n  var exports = instance.exports;\n  Module[\"asm\"] = exports;\n  wasmTable = Module[\"asm\"][\"r\"];\n  removeRunDependency(\"wasm-instantiate\");\n }\n addRunDependency(\"wasm-instantiate\");\n function receiveInstantiatedSource(output) {\n  receiveInstance(output[\"instance\"]);\n }\n function instantiateArrayBuffer(receiver) {\n  return getBinaryPromise().then(function(binary) {\n   return WebAssembly.instantiate(binary, info);\n  }).then(receiver, function(reason) {\n   err(\"failed to asynchronously prepare wasm: \" + reason);\n   abort(reason);\n  });\n }\n function instantiateAsync() {\n  if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \"function\") {\n   fetch(wasmBinaryFile, {\n    credentials: \"same-origin\"\n   }).then(function(response) {\n    var result = WebAssembly.instantiateStreaming(response, info);\n    return result.then(receiveInstantiatedSource, function(reason) {\n     err(\"wasm streaming compile failed: \" + reason);\n     err(\"falling back to ArrayBuffer instantiation\");\n     return instantiateArrayBuffer(receiveInstantiatedSource);\n    });\n   });\n  } else {\n   return instantiateArrayBuffer(receiveInstantiatedSource);\n  }\n }\n if (Module[\"instantiateWasm\"]) {\n  try {\n   var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n   return exports;\n  } catch (e) {\n   err(\"Module.instantiateWasm callback failed with error: \" + e);\n   return false;\n  }\n }\n instantiateAsync();\n return {};\n}\n\nfunction callRuntimeCallbacks(callbacks) {\n while (callbacks.length > 0) {\n  var callback = callbacks.shift();\n  if (typeof callback == \"function\") {\n   callback(Module);\n   continue;\n  }\n  var func = callback.func;\n  if (typeof func === \"number\") {\n   if (callback.arg === undefined) {\n    wasmTable.get(func)();\n   } else {\n    wasmTable.get(func)(callback.arg);\n   }\n  } else {\n   func(callback.arg === undefined ? null : callback.arg);\n  }\n }\n}\n\nvar ExceptionInfoAttrs = {\n DESTRUCTOR_OFFSET: 0,\n REFCOUNT_OFFSET: 4,\n TYPE_OFFSET: 8,\n CAUGHT_OFFSET: 12,\n RETHROWN_OFFSET: 13,\n SIZE: 16\n};\n\nfunction ___cxa_allocate_exception(size) {\n return _malloc(size + ExceptionInfoAttrs.SIZE) + ExceptionInfoAttrs.SIZE;\n}\n\nfunction ExceptionInfo(excPtr) {\n this.excPtr = excPtr;\n this.ptr = excPtr - ExceptionInfoAttrs.SIZE;\n this.set_type = function(type) {\n  HEAP32[this.ptr + ExceptionInfoAttrs.TYPE_OFFSET >> 2] = type;\n };\n this.get_type = function() {\n  return HEAP32[this.ptr + ExceptionInfoAttrs.TYPE_OFFSET >> 2];\n };\n this.set_destructor = function(destructor) {\n  HEAP32[this.ptr + ExceptionInfoAttrs.DESTRUCTOR_OFFSET >> 2] = destructor;\n };\n this.get_destructor = function() {\n  return HEAP32[this.ptr + ExceptionInfoAttrs.DESTRUCTOR_OFFSET >> 2];\n };\n this.set_refcount = function(refcount) {\n  HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >> 2] = refcount;\n };\n this.set_caught = function(caught) {\n  caught = caught ? 1 : 0;\n  HEAP8[this.ptr + ExceptionInfoAttrs.CAUGHT_OFFSET >> 0] = caught;\n };\n this.get_caught = function() {\n  return HEAP8[this.ptr + ExceptionInfoAttrs.CAUGHT_OFFSET >> 0] != 0;\n };\n this.set_rethrown = function(rethrown) {\n  rethrown = rethrown ? 1 : 0;\n  HEAP8[this.ptr + ExceptionInfoAttrs.RETHROWN_OFFSET >> 0] = rethrown;\n };\n this.get_rethrown = function() {\n  return HEAP8[this.ptr + ExceptionInfoAttrs.RETHROWN_OFFSET >> 0] != 0;\n };\n this.init = function(type, destructor) {\n  this.set_type(type);\n  this.set_destructor(destructor);\n  this.set_refcount(0);\n  this.set_caught(false);\n  this.set_rethrown(false);\n };\n this.add_ref = function() {\n  var value = HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >> 2];\n  HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >> 2] = value + 1;\n };\n this.release_ref = function() {\n  var prev = HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >> 2];\n  HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >> 2] = prev - 1;\n  return prev === 1;\n };\n}\n\nvar exceptionLast = 0;\n\nfunction __ZSt18uncaught_exceptionv() {\n return __ZSt18uncaught_exceptionv.uncaught_exceptions > 0;\n}\n\nfunction ___cxa_throw(ptr, type, destructor) {\n var info = new ExceptionInfo(ptr);\n info.init(type, destructor);\n exceptionLast = ptr;\n if (!(\"uncaught_exception\" in __ZSt18uncaught_exceptionv)) {\n  __ZSt18uncaught_exceptionv.uncaught_exceptions = 1;\n } else {\n  __ZSt18uncaught_exceptionv.uncaught_exceptions++;\n }\n throw ptr;\n}\n\nfunction getShiftFromSize(size) {\n switch (size) {\n case 1:\n  return 0;\n\n case 2:\n  return 1;\n\n case 4:\n  return 2;\n\n case 8:\n  return 3;\n\n default:\n  throw new TypeError(\"Unknown type size: \" + size);\n }\n}\n\nfunction embind_init_charCodes() {\n var codes = new Array(256);\n for (var i = 0; i < 256; ++i) {\n  codes[i] = String.fromCharCode(i);\n }\n embind_charCodes = codes;\n}\n\nvar embind_charCodes = undefined;\n\nfunction readLatin1String(ptr) {\n var ret = \"\";\n var c = ptr;\n while (HEAPU8[c]) {\n  ret += embind_charCodes[HEAPU8[c++]];\n }\n return ret;\n}\n\nvar awaitingDependencies = {};\n\nvar registeredTypes = {};\n\nvar typeDependencies = {};\n\nvar char_0 = 48;\n\nvar char_9 = 57;\n\nfunction makeLegalFunctionName(name) {\n if (undefined === name) {\n  return \"_unknown\";\n }\n name = name.replace(/[^a-zA-Z0-9_]/g, \"$\");\n var f = name.charCodeAt(0);\n if (f >= char_0 && f <= char_9) {\n  return \"_\" + name;\n } else {\n  return name;\n }\n}\n\nfunction createNamedFunction(name, body) {\n name = makeLegalFunctionName(name);\n return new Function(\"body\", \"return function \" + name + \"() {\\n\" + '    \"use strict\";' + \"    return body.apply(this, arguments);\\n\" + \"};\\n\")(body);\n}\n\nfunction extendError(baseErrorType, errorName) {\n var errorClass = createNamedFunction(errorName, function(message) {\n  this.name = errorName;\n  this.message = message;\n  var stack = new Error(message).stack;\n  if (stack !== undefined) {\n   this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\n  }\n });\n errorClass.prototype = Object.create(baseErrorType.prototype);\n errorClass.prototype.constructor = errorClass;\n errorClass.prototype.toString = function() {\n  if (this.message === undefined) {\n   return this.name;\n  } else {\n   return this.name + \": \" + this.message;\n  }\n };\n return errorClass;\n}\n\nvar BindingError = undefined;\n\nfunction throwBindingError(message) {\n throw new BindingError(message);\n}\n\nvar InternalError = undefined;\n\nfunction registerType(rawType, registeredInstance, options) {\n options = options || {};\n if (!(\"argPackAdvance\" in registeredInstance)) {\n  throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n }\n var name = registeredInstance.name;\n if (!rawType) {\n  throwBindingError('type \"' + name + '\" must have a positive integer typeid pointer');\n }\n if (registeredTypes.hasOwnProperty(rawType)) {\n  if (options.ignoreDuplicateRegistrations) {\n   return;\n  } else {\n   throwBindingError(\"Cannot register type '\" + name + \"' twice\");\n  }\n }\n registeredTypes[rawType] = registeredInstance;\n delete typeDependencies[rawType];\n if (awaitingDependencies.hasOwnProperty(rawType)) {\n  var callbacks = awaitingDependencies[rawType];\n  delete awaitingDependencies[rawType];\n  callbacks.forEach(function(cb) {\n   cb();\n  });\n }\n}\n\nfunction __embind_register_bool(rawType, name, size, trueValue, falseValue) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(wt) {\n   return !!wt;\n  },\n  \"toWireType\": function(destructors, o) {\n   return o ? trueValue : falseValue;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": function(pointer) {\n   var heap;\n   if (size === 1) {\n    heap = HEAP8;\n   } else if (size === 2) {\n    heap = HEAP16;\n   } else if (size === 4) {\n    heap = HEAP32;\n   } else {\n    throw new TypeError(\"Unknown boolean type size: \" + name);\n   }\n   return this[\"fromWireType\"](heap[pointer >> shift]);\n  },\n  destructorFunction: null\n });\n}\n\nvar emval_free_list = [];\n\nvar emval_handle_array = [ {}, {\n value: undefined\n}, {\n value: null\n}, {\n value: true\n}, {\n value: false\n} ];\n\nfunction __emval_decref(handle) {\n if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {\n  emval_handle_array[handle] = undefined;\n  emval_free_list.push(handle);\n }\n}\n\nfunction count_emval_handles() {\n var count = 0;\n for (var i = 5; i < emval_handle_array.length; ++i) {\n  if (emval_handle_array[i] !== undefined) {\n   ++count;\n  }\n }\n return count;\n}\n\nfunction get_first_emval() {\n for (var i = 5; i < emval_handle_array.length; ++i) {\n  if (emval_handle_array[i] !== undefined) {\n   return emval_handle_array[i];\n  }\n }\n return null;\n}\n\nfunction init_emval() {\n Module[\"count_emval_handles\"] = count_emval_handles;\n Module[\"get_first_emval\"] = get_first_emval;\n}\n\nfunction __emval_register(value) {\n switch (value) {\n case undefined:\n  {\n   return 1;\n  }\n\n case null:\n  {\n   return 2;\n  }\n\n case true:\n  {\n   return 3;\n  }\n\n case false:\n  {\n   return 4;\n  }\n\n default:\n  {\n   var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\n   emval_handle_array[handle] = {\n    refcount: 1,\n    value: value\n   };\n   return handle;\n  }\n }\n}\n\nfunction simpleReadValueFromPointer(pointer) {\n return this[\"fromWireType\"](HEAPU32[pointer >> 2]);\n}\n\nfunction __embind_register_emval(rawType, name) {\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(handle) {\n   var rv = emval_handle_array[handle].value;\n   __emval_decref(handle);\n   return rv;\n  },\n  \"toWireType\": function(destructors, value) {\n   return __emval_register(value);\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: null\n });\n}\n\nfunction _embind_repr(v) {\n if (v === null) {\n  return \"null\";\n }\n var t = typeof v;\n if (t === \"object\" || t === \"array\" || t === \"function\") {\n  return v.toString();\n } else {\n  return \"\" + v;\n }\n}\n\nfunction floatReadValueFromPointer(name, shift) {\n switch (shift) {\n case 2:\n  return function(pointer) {\n   return this[\"fromWireType\"](HEAPF32[pointer >> 2]);\n  };\n\n case 3:\n  return function(pointer) {\n   return this[\"fromWireType\"](HEAPF64[pointer >> 3]);\n  };\n\n default:\n  throw new TypeError(\"Unknown float type: \" + name);\n }\n}\n\nfunction __embind_register_float(rawType, name, size) {\n var shift = getShiftFromSize(size);\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   return value;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n    throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n   }\n   return value;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": floatReadValueFromPointer(name, shift),\n  destructorFunction: null\n });\n}\n\nfunction integerReadValueFromPointer(name, shift, signed) {\n switch (shift) {\n case 0:\n  return signed ? function readS8FromPointer(pointer) {\n   return HEAP8[pointer];\n  } : function readU8FromPointer(pointer) {\n   return HEAPU8[pointer];\n  };\n\n case 1:\n  return signed ? function readS16FromPointer(pointer) {\n   return HEAP16[pointer >> 1];\n  } : function readU16FromPointer(pointer) {\n   return HEAPU16[pointer >> 1];\n  };\n\n case 2:\n  return signed ? function readS32FromPointer(pointer) {\n   return HEAP32[pointer >> 2];\n  } : function readU32FromPointer(pointer) {\n   return HEAPU32[pointer >> 2];\n  };\n\n default:\n  throw new TypeError(\"Unknown integer type: \" + name);\n }\n}\n\nfunction __embind_register_integer(primitiveType, name, size, minRange, maxRange) {\n name = readLatin1String(name);\n if (maxRange === -1) {\n  maxRange = 4294967295;\n }\n var shift = getShiftFromSize(size);\n var fromWireType = function(value) {\n  return value;\n };\n if (minRange === 0) {\n  var bitshift = 32 - 8 * size;\n  fromWireType = function(value) {\n   return value << bitshift >>> bitshift;\n  };\n }\n var isUnsignedType = name.indexOf(\"unsigned\") != -1;\n registerType(primitiveType, {\n  name: name,\n  \"fromWireType\": fromWireType,\n  \"toWireType\": function(destructors, value) {\n   if (typeof value !== \"number\" && typeof value !== \"boolean\") {\n    throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\n   }\n   if (value < minRange || value > maxRange) {\n    throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\n   }\n   return isUnsignedType ? value >>> 0 : value | 0;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": integerReadValueFromPointer(name, shift, minRange !== 0),\n  destructorFunction: null\n });\n}\n\nfunction __embind_register_memory_view(rawType, dataTypeIndex, name) {\n var typeMapping = [ Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array ];\n var TA = typeMapping[dataTypeIndex];\n function decodeMemoryView(handle) {\n  handle = handle >> 2;\n  var heap = HEAPU32;\n  var size = heap[handle];\n  var data = heap[handle + 1];\n  return new TA(buffer, data, size);\n }\n name = readLatin1String(name);\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": decodeMemoryView,\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": decodeMemoryView\n }, {\n  ignoreDuplicateRegistrations: true\n });\n}\n\nfunction __embind_register_std_string(rawType, name) {\n name = readLatin1String(name);\n var stdStringIsUTF8 = name === \"std::string\";\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   var length = HEAPU32[value >> 2];\n   var str;\n   if (stdStringIsUTF8) {\n    var decodeStartPtr = value + 4;\n    for (var i = 0; i <= length; ++i) {\n     var currentBytePtr = value + 4 + i;\n     if (i == length || HEAPU8[currentBytePtr] == 0) {\n      var maxRead = currentBytePtr - decodeStartPtr;\n      var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\n      if (str === undefined) {\n       str = stringSegment;\n      } else {\n       str += String.fromCharCode(0);\n       str += stringSegment;\n      }\n      decodeStartPtr = currentBytePtr + 1;\n     }\n    }\n   } else {\n    var a = new Array(length);\n    for (var i = 0; i < length; ++i) {\n     a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);\n    }\n    str = a.join(\"\");\n   }\n   _free(value);\n   return str;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (value instanceof ArrayBuffer) {\n    value = new Uint8Array(value);\n   }\n   var getLength;\n   var valueIsOfTypeString = typeof value === \"string\";\n   if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\n    throwBindingError(\"Cannot pass non-string to std::string\");\n   }\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\n    getLength = function() {\n     return lengthBytesUTF8(value);\n    };\n   } else {\n    getLength = function() {\n     return value.length;\n    };\n   }\n   var length = getLength();\n   var ptr = _malloc(4 + length + 1);\n   HEAPU32[ptr >> 2] = length;\n   if (stdStringIsUTF8 && valueIsOfTypeString) {\n    stringToUTF8(value, ptr + 4, length + 1);\n   } else {\n    if (valueIsOfTypeString) {\n     for (var i = 0; i < length; ++i) {\n      var charCode = value.charCodeAt(i);\n      if (charCode > 255) {\n       _free(ptr);\n       throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\n      }\n      HEAPU8[ptr + 4 + i] = charCode;\n     }\n    } else {\n     for (var i = 0; i < length; ++i) {\n      HEAPU8[ptr + 4 + i] = value[i];\n     }\n    }\n   }\n   if (destructors !== null) {\n    destructors.push(_free, ptr);\n   }\n   return ptr;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: function(ptr) {\n   _free(ptr);\n  }\n });\n}\n\nfunction __embind_register_std_wstring(rawType, charSize, name) {\n name = readLatin1String(name);\n var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\n if (charSize === 2) {\n  decodeString = UTF16ToString;\n  encodeString = stringToUTF16;\n  lengthBytesUTF = lengthBytesUTF16;\n  getHeap = function() {\n   return HEAPU16;\n  };\n  shift = 1;\n } else if (charSize === 4) {\n  decodeString = UTF32ToString;\n  encodeString = stringToUTF32;\n  lengthBytesUTF = lengthBytesUTF32;\n  getHeap = function() {\n   return HEAPU32;\n  };\n  shift = 2;\n }\n registerType(rawType, {\n  name: name,\n  \"fromWireType\": function(value) {\n   var length = HEAPU32[value >> 2];\n   var HEAP = getHeap();\n   var str;\n   var decodeStartPtr = value + 4;\n   for (var i = 0; i <= length; ++i) {\n    var currentBytePtr = value + 4 + i * charSize;\n    if (i == length || HEAP[currentBytePtr >> shift] == 0) {\n     var maxReadBytes = currentBytePtr - decodeStartPtr;\n     var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\n     if (str === undefined) {\n      str = stringSegment;\n     } else {\n      str += String.fromCharCode(0);\n      str += stringSegment;\n     }\n     decodeStartPtr = currentBytePtr + charSize;\n    }\n   }\n   _free(value);\n   return str;\n  },\n  \"toWireType\": function(destructors, value) {\n   if (!(typeof value === \"string\")) {\n    throwBindingError(\"Cannot pass non-string to C++ string type \" + name);\n   }\n   var length = lengthBytesUTF(value);\n   var ptr = _malloc(4 + length + charSize);\n   HEAPU32[ptr >> 2] = length >> shift;\n   encodeString(value, ptr + 4, length + charSize);\n   if (destructors !== null) {\n    destructors.push(_free, ptr);\n   }\n   return ptr;\n  },\n  \"argPackAdvance\": 8,\n  \"readValueFromPointer\": simpleReadValueFromPointer,\n  destructorFunction: function(ptr) {\n   _free(ptr);\n  }\n });\n}\n\nfunction __embind_register_void(rawType, name) {\n name = readLatin1String(name);\n registerType(rawType, {\n  isVoid: true,\n  name: name,\n  \"argPackAdvance\": 0,\n  \"fromWireType\": function() {\n   return undefined;\n  },\n  \"toWireType\": function(destructors, o) {\n   return undefined;\n  }\n });\n}\n\nfunction _abort() {\n abort();\n}\n\nfunction _emscripten_memcpy_big(dest, src, num) {\n HEAPU8.copyWithin(dest, src, src + num);\n}\n\nfunction _emscripten_get_heap_size() {\n return HEAPU8.length;\n}\n\nfunction emscripten_realloc_buffer(size) {\n try {\n  wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n  updateGlobalBufferAndViews(wasmMemory.buffer);\n  return 1;\n } catch (e) {}\n}\n\nfunction _emscripten_resize_heap(requestedSize) {\n requestedSize = requestedSize >>> 0;\n var oldSize = _emscripten_get_heap_size();\n var maxHeapSize = 2147483648;\n if (requestedSize > maxHeapSize) {\n  return false;\n }\n var minHeapSize = 16777216;\n for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n  var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n  overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n  var newSize = Math.min(maxHeapSize, alignUp(Math.max(minHeapSize, requestedSize, overGrownHeapSize), 65536));\n  var replacement = emscripten_realloc_buffer(newSize);\n  if (replacement) {\n   return true;\n  }\n }\n return false;\n}\n\nvar PATH = {\n splitPath: function(filename) {\n  var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n  return splitPathRe.exec(filename).slice(1);\n },\n normalizeArray: function(parts, allowAboveRoot) {\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n   var last = parts[i];\n   if (last === \".\") {\n    parts.splice(i, 1);\n   } else if (last === \"..\") {\n    parts.splice(i, 1);\n    up++;\n   } else if (up) {\n    parts.splice(i, 1);\n    up--;\n   }\n  }\n  if (allowAboveRoot) {\n   for (;up; up--) {\n    parts.unshift(\"..\");\n   }\n  }\n  return parts;\n },\n normalize: function(path) {\n  var isAbsolute = path.charAt(0) === \"/\", trailingSlash = path.substr(-1) === \"/\";\n  path = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\n   return !!p;\n  }), !isAbsolute).join(\"/\");\n  if (!path && !isAbsolute) {\n   path = \".\";\n  }\n  if (path && trailingSlash) {\n   path += \"/\";\n  }\n  return (isAbsolute ? \"/\" : \"\") + path;\n },\n dirname: function(path) {\n  var result = PATH.splitPath(path), root = result[0], dir = result[1];\n  if (!root && !dir) {\n   return \".\";\n  }\n  if (dir) {\n   dir = dir.substr(0, dir.length - 1);\n  }\n  return root + dir;\n },\n basename: function(path) {\n  if (path === \"/\") return \"/\";\n  path = PATH.normalize(path);\n  path = path.replace(/\\/$/, \"\");\n  var lastSlash = path.lastIndexOf(\"/\");\n  if (lastSlash === -1) return path;\n  return path.substr(lastSlash + 1);\n },\n extname: function(path) {\n  return PATH.splitPath(path)[3];\n },\n join: function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return PATH.normalize(paths.join(\"/\"));\n },\n join2: function(l, r) {\n  return PATH.normalize(l + \"/\" + r);\n }\n};\n\nvar SYSCALLS = {\n mappings: {},\n buffers: [ null, [], [] ],\n printChar: function(stream, curr) {\n  var buffer = SYSCALLS.buffers[stream];\n  if (curr === 0 || curr === 10) {\n   (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n   buffer.length = 0;\n  } else {\n   buffer.push(curr);\n  }\n },\n varargs: undefined,\n get: function() {\n  SYSCALLS.varargs += 4;\n  var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n  return ret;\n },\n getStr: function(ptr) {\n  var ret = UTF8ToString(ptr);\n  return ret;\n },\n get64: function(low, high) {\n  return low;\n }\n};\n\nfunction _fd_close(fd) {\n return 0;\n}\n\nfunction _fd_seek(fd, offset_low, offset_high, whence, newOffset) {}\n\nfunction _fd_write(fd, iov, iovcnt, pnum) {\n var num = 0;\n for (var i = 0; i < iovcnt; i++) {\n  var ptr = HEAP32[iov + i * 8 >> 2];\n  var len = HEAP32[iov + (i * 8 + 4) >> 2];\n  for (var j = 0; j < len; j++) {\n   SYSCALLS.printChar(fd, HEAPU8[ptr + j]);\n  }\n  num += len;\n }\n HEAP32[pnum >> 2] = num;\n return 0;\n}\n\nembind_init_charCodes();\n\nBindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\n\nInternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\n\ninit_emval();\n\n__ATINIT__.push({\n func: function() {\n  ___wasm_call_ctors();\n }\n});\n\nvar asmLibraryArg = {\n \"b\": ___cxa_allocate_exception,\n \"c\": ___cxa_throw,\n \"l\": __embind_register_bool,\n \"k\": __embind_register_emval,\n \"g\": __embind_register_float,\n \"e\": __embind_register_integer,\n \"d\": __embind_register_memory_view,\n \"h\": __embind_register_std_string,\n \"f\": __embind_register_std_wstring,\n \"m\": __embind_register_void,\n \"j\": _abort,\n \"o\": _emscripten_memcpy_big,\n \"p\": _emscripten_resize_heap,\n \"q\": _fd_close,\n \"n\": _fd_seek,\n \"i\": _fd_write,\n \"a\": wasmMemory\n};\n\nvar asm = createWasm();\n\nvar ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"s\"]).apply(null, arguments);\n};\n\nvar _interpret = Module[\"_interpret\"] = function() {\n return (_interpret = Module[\"_interpret\"] = Module[\"asm\"][\"t\"]).apply(null, arguments);\n};\n\nvar _test = Module[\"_test\"] = function() {\n return (_test = Module[\"_test\"] = Module[\"asm\"][\"u\"]).apply(null, arguments);\n};\n\nvar ___getTypeName = Module[\"___getTypeName\"] = function() {\n return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"v\"]).apply(null, arguments);\n};\n\nvar ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function() {\n return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"w\"]).apply(null, arguments);\n};\n\nvar _malloc = Module[\"_malloc\"] = function() {\n return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"x\"]).apply(null, arguments);\n};\n\nvar stackSave = Module[\"stackSave\"] = function() {\n return (stackSave = Module[\"stackSave\"] = Module[\"asm\"][\"y\"]).apply(null, arguments);\n};\n\nvar stackRestore = Module[\"stackRestore\"] = function() {\n return (stackRestore = Module[\"stackRestore\"] = Module[\"asm\"][\"z\"]).apply(null, arguments);\n};\n\nvar stackAlloc = Module[\"stackAlloc\"] = function() {\n return (stackAlloc = Module[\"stackAlloc\"] = Module[\"asm\"][\"A\"]).apply(null, arguments);\n};\n\nvar _free = Module[\"_free\"] = function() {\n return (_free = Module[\"_free\"] = Module[\"asm\"][\"B\"]).apply(null, arguments);\n};\n\nModule[\"ccall\"] = ccall;\n\nModule[\"cwrap\"] = cwrap;\n\nvar calledRun;\n\nfunction ExitStatus(status) {\n this.name = \"ExitStatus\";\n this.message = \"Program terminated with exit(\" + status + \")\";\n this.status = status;\n}\n\ndependenciesFulfilled = function runCaller() {\n if (!calledRun) run();\n if (!calledRun) dependenciesFulfilled = runCaller;\n};\n\nfunction run(args) {\n args = args || arguments_;\n if (runDependencies > 0) {\n  return;\n }\n preRun();\n if (runDependencies > 0) return;\n function doRun() {\n  if (calledRun) return;\n  calledRun = true;\n  Module[\"calledRun\"] = true;\n  if (ABORT) return;\n  initRuntime();\n  preMain();\n  readyPromiseResolve(Module);\n  if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n  postRun();\n }\n if (Module[\"setStatus\"]) {\n  Module[\"setStatus\"](\"Running...\");\n  setTimeout(function() {\n   setTimeout(function() {\n    Module[\"setStatus\"](\"\");\n   }, 1);\n   doRun();\n  }, 1);\n } else {\n  doRun();\n }\n}\n\nModule[\"run\"] = run;\n\nif (Module[\"preInit\"]) {\n if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [ Module[\"preInit\"] ];\n while (Module[\"preInit\"].length > 0) {\n  Module[\"preInit\"].pop()();\n }\n}\n\nnoExitRuntime = true;\n\nrun();\n\n\n  return Module.ready\n}\n);\n})();\nexport default Module;\n","import React from \"react\";\nimport { View, StyleSheet, Text, TextInput } from \"react-native\";\nimport interpreter from \"../interpreter/interpreter.js\";\n\ninterface Props {}\n\ninterface State {\n  input: string;\n  result: any;\n  interpret: (input: string) => Promise<any>;\n}\n\nexport default class Home extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      input: \"\",\n      result: \"\",\n      interpret: (input: string) => {\n        return Promise.resolve(\"interpreter unloaded\");\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.load();\n  }\n\n  load = async () => {\n    const mod = await interpreter({\n      noInitialRun: true,\n      noExitRuntime: true,\n    });\n    const interpret = mod.cwrap(\"interpret\", \"number\", [\"string\"]);\n    const func = async (x: string) => {\n      return interpret(x);\n    };\n    this.setState({ interpret: func });\n  };\n\n  inputChange = (text: string) => {\n    let now = Date.now();\n    this.setState({ input: text, result: \"loading...\" }, () => {\n      this.state\n        .interpret(text)\n        .then((out) => {\n          let t = Date.now() - now;\n          this.setState({ result: out });\n        })\n        .catch((err) => {\n          this.setState({ result: \"couldn't interpret!\" });\n        });\n    });\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <TextInput\n          value={this.state.input}\n          onChangeText={this.inputChange}\n          multiline={true}\n          style={[styles.input, styles.textInput]}\n        />\n        <TextInput\n          value={this.state.result}\n          onChangeText={this.inputChange}\n          multiline={true}\n          style={[styles.output, styles.textInput]}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"row\",\n  },\n  input: {\n    flex: 4,\n    backgroundColor: \"#282c34\",\n    color: \"white\",\n  },\n  output: {\n    flex: 2,\n    color: \"#0288d1\",\n  },\n  textInput: {\n    fontFamily: \"sans-serif\",\n    fontSize: 24,\n    fontWeight: \"400\",\n    padding: 12,\n  },\n});\n","import React from \"react\";\nimport { View, Text, StyleSheet, Platform } from \"react-native\";\nimport Home from \"./screens/Home\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <Home />\n      </View>\n    );\n  }\n}\n\nconst height = Platform.OS == \"web\" ? \"100vh\" : \"100%\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: height,\n  },\n});\n\nexport const injectWebCss = () => {\n  // Only on web\n  if (Platform.OS != \"web\") return;\n\n  // Inject style\n  const style = document.createElement(\"style\");\n  style.textContent = `textarea, select, input, button { outline: none!important; }`;\n  return document.head.append(style);\n};\n\ninjectWebCss();\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}