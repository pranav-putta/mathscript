{"version":3,"sources":["../../wasm-build/interpreter_bg.js","../node_modules/webpack/buildin/harmony-module.js","../../wasm-build/interpreter.js"],"names":["cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","heap","Array","fill","undefined","push","heap_next","length","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","takeObject","idx","ret","getObject","dropObject","lib_interpret","text","ptr0","malloc","realloc","ptr","subarray","len","mem","offset","code","charCodeAt","slice","passStringToWasm0","len0","__wbindgen_json_parse","arg0","arg1","obj","addHeapObject","JSON","parse","exports","originalModule","webpackPolyfill","Object","create","children","defineProperty","enumerable","get","l","i"],"mappings":"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","file":"static/js/3.24d13553.chunk.js","sourcesContent":["import * as wasm from './interpreter_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n* @param {string} text\n* @returns {any}\n*/\nexport function lib_interpret(text) {\n    var ptr0 = passStringToWasm0(text, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.lib_interpret(ptr0, len0);\n    return takeObject(ret);\n}\n\nexport const __wbindgen_json_parse = function(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import * as wasm from \"./interpreter_bg.wasm\";\nexport * from \"./interpreter_bg.js\";"],"sourceRoot":""}