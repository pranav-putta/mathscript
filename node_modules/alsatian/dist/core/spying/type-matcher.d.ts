import { ISpyMatcher } from "./spy-matcher.i";
import { MatcherOrType } from "./matcher-or-type";
import { MatcherArgument } from "./matcher-argument";
export declare class TypeMatcher<ExpectedType extends object> implements ISpyMatcher<ExpectedType> {
    readonly type: new (...args: Array<any>) => ExpectedType;
    private readonly _testers;
    constructor(type: new (...args: Array<any>) => ExpectedType);
    test(value: any): boolean;
    stringify(): string;
    thatMatches<Key extends keyof ExpectedType>(first: MatcherArgument<ExpectedType, Key>, second?: ExpectedType[Key]): MatcherOrType<ExpectedType>;
    private _matchesKeyAndValue;
    private _matchesDelegate;
    private _matchesObjectLiteral;
    private _thisAsMatcherOrType;
}
