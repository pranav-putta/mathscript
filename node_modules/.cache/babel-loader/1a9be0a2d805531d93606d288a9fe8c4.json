{"ast":null,"code":"var _jsxFileName = \"/Users/pranavputta/GitHub/linalg_lang/frontend/src/App.tsx\";\nimport React from \"react\";\nimport { interpretSource } from \"./interpreter\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onInputChange = event => {\n      let input = event.target.value;\n      let out = interpretSource(input);\n\n      if (typeof out === \"string\") {\n        this.setState({\n          input: input,\n          results: out\n        });\n      } else {\n        let result = \"\";\n\n        for (let o of out) {\n          if (o) {\n            let str = o.toString();\n            result += o.toString();\n          }\n\n          result += \"\\n\";\n        }\n\n        this.setState({\n          input: input,\n          results: result\n        });\n      }\n    };\n\n    this.state = {\n      input: \"\",\n      results: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"Input-Text-Area\",\n      value: this.state.input,\n      onChange: this.onInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      disabled: true,\n      value: this.state.results,\n      className: \"Result-Text-Area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pranavputta/GitHub/linalg_lang/frontend/src/App.tsx"],"names":["React","interpretSource","App","Component","constructor","props","onInputChange","event","input","target","value","out","setState","results","result","o","str","toString","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAO,WAAP;;AASA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAgD;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;;AADwB,SAQ1BC,aAR0B,GAQTC,KAAD,IAAmD;AACjE,UAAIC,KAAa,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAjC;AACA,UAAIC,GAAG,GAAGV,eAAe,CAACO,KAAD,CAAzB;;AACA,UAAI,OAAOG,GAAP,KAAe,QAAnB,EAA6B;AAC3B,aAAKC,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAEA,KAAT;AAAgBK,UAAAA,OAAO,EAAEF;AAAzB,SAAd;AACD,OAFD,MAEO;AACL,YAAIG,MAAM,GAAG,EAAb;;AACA,aAAK,IAAIC,CAAT,IAAcJ,GAAd,EAAmB;AACjB,cAAII,CAAJ,EAAO;AACL,gBAAIC,GAAG,GAAGD,CAAC,CAACE,QAAF,EAAV;AACAH,YAAAA,MAAM,IAAIC,CAAC,CAACE,QAAF,EAAV;AACD;;AACDH,UAAAA,MAAM,IAAI,IAAV;AACD;;AACD,aAAKF,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAEA,KAAT;AAAgBK,UAAAA,OAAO,EAAEC;AAAzB,SAAd;AACD;AACF,KAxByB;;AAExB,SAAKI,KAAL,GAAa;AACXV,MAAAA,KAAK,EAAE,EADI;AAEXK,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AAoBDM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWV,KAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKF,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME;AACE,MAAA,QAAQ,EAAE,IADZ;AAEE,MAAA,KAAK,EAAE,KAAKY,KAAL,CAAWL,OAFpB;AAGE,MAAA,SAAS,EAAC,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CADF;AAgBD;;AA5C6C;;AA+ChD,eAAeX,GAAf","sourcesContent":["import React from \"react\";\nimport { interpretSource } from \"./interpreter\";\nimport \"./App.css\";\n\ninterface Props {}\n\ninterface State {\n  input: string;\n  results: string;\n}\n\nclass App extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      input: \"\",\n      results: \"\",\n    };\n  }\n\n  onInputChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    let input: string = event.target.value;\n    let out = interpretSource(input);\n    if (typeof out === \"string\") {\n      this.setState({ input: input, results: out });\n    } else {\n      let result = \"\";\n      for (let o of out) {\n        if (o) {\n          let str = o.toString();\n          result += o.toString();\n        }\n        result += \"\\n\";\n      }\n      this.setState({ input: input, results: result });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <textarea\n            className=\"Input-Text-Area\"\n            value={this.state.input}\n            onChange={this.onInputChange}\n          />\n          <textarea\n            disabled={true}\n            value={this.state.results}\n            className=\"Result-Text-Area\"\n          />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}